#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'todotxt_rb'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/todotxt_rb` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/todotxt_rb now"
  exit 64
end

include GLI::App

program_desc 'Describe your application here'

version TodotxtRb::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Describe some switch here'
switch [:s,:switch]

desc 'file'
default_value '~/.todo.txt'
arg_name 'filename'
flag [:f,:filename]

desc 'Add a new task to the todo.txt file'
arg_name 'Text to add'
command [:add, :a] do |c|
  c.action do |global_options,options,args|
    File.open(global_options[:f], 'a') do |file|
      task = TodotxtRb::Task.new(args[0])
      file.puts task
    end
  end
end

desc 'Describe append here'
arg_name 'Describe arguments to append here'
command :append do |c|
  c.action do |global_options,options,args|
    puts "append command ran"
  end
end

desc 'Describe archive here'
arg_name 'Describe arguments to archive here'
command :archive do |c|
  c.action do |global_options,options,args|
    puts "archive command ran"
  end
end

desc 'Describe deduplicate here'
arg_name 'Describe arguments to deduplicate here'
command :deduplicate do |c|
  c.action do |global_options,options,args|
    puts "deduplicate command ran"
  end
end

desc 'Describe rm here'
arg_name 'Describe arguments to rm here'
command :rm do |c|
  c.action do |global_options,options,args|
    puts "rm command ran"
  end
end

desc 'Describe depri here'
arg_name 'Describe arguments to depri here'
command :depri do |c|
  c.action do |global_options,options,args|
    puts "depri command ran"
  end
end

desc 'Describe do here'
arg_name 'Describe arguments to do here'
command :do do |c|
  c.action do |global_options,options,args|
    puts "do command ran"
  end
end

desc 'List out tasks from todo.txt file'
arg_name 'filter'
command [:list, :ls] do |c|
  c.action do |global_options,options,args|
    array = []
    File.open(global_options[:f]) do |file|
      file.each_line do |line|
        array.push TodotxtRb::Task.new(line)
      end
    end
    list = TodotxtRb::List.new(array)
    puts list
  end
end

desc 'Describe listall here'
arg_name 'Describe arguments to listall here'
command :listall do |c|
  c.action do |global_options,options,args|
    puts "listall command ran"
  end
end

desc 'List all contexts from the todo.txt file'
arg_name 'Describe arguments to listcon here'
command :listcon do |c|
  c.action do |global_options,options,args|
    array = []
    File.open(global_options[:f]) do |file|
      file.each_line do |line|
        array.push TodotxtRb::Task.new(line)
      end
    end
    list = TodotxtRb::List.new(array)
    puts list.contexts
  end
end

desc 'List all priorities from the todo.txt file'
arg_name 'Describe arguments to listpri here'
command :listpri do |c|
  c.action do |global_options,options,args|
    array = []
    File.open(global_options[:f]) do |file|
      file.each_line do |line|
        array.push TodotxtRb::Task.new(line)
      end
    end
    list = TodotxtRb::List.new(array)
    puts list.priorities
  end
end

desc 'Describe listproj here'
arg_name 'Describe arguments to listproj here'
command :listproj do |c|
  c.action do |global_options,options,args|
    array = []
    File.open(global_options[:f]) do |file|
      file.each_line do |line|
        array.push TodotxtRb::Task.new(line)
      end
    end
    list = TodotxtRb::List.new(array)
    puts list.projects
  end
end

desc 'Describe prepend here'
arg_name 'Describe arguments to prepend here'
command :prepend do |c|
  c.action do |global_options,options,args|
    puts "prepend command ran"
  end
end

desc 'Describe pri here'
arg_name 'Describe arguments to pri here'
command :pri do |c|
  c.action do |global_options,options,args|
    puts "pri command ran"
  end
end

desc 'Describe replace here'
arg_name 'Describe arguments to replace here'
command :replace do |c|
  c.action do |global_options,options,args|
    puts "replace command ran"
  end
end

desc 'Describe report here'
arg_name 'Describe arguments to report here'
command :report do |c|
  c.action do |global_options,options,args|
    puts "report command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
